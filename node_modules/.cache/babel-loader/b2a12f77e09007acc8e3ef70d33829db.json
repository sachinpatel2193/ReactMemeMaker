{"ast":null,"code":"import _defineProperty from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/src/Components/MainPage/index.js\";\nimport React from 'react';\nimport { Modal, ModalHeader, ModalBody, FormGroup, Label, NavbarBrand } from 'reactstrap';\nvar photos = [{\n  src: '/images/vict-baby.png'\n}, {\n  src: '/images/ned.jpeg'\n}, {\n  src: '/images/devilgirl.jpg'\n}, {\n  src: '/images/trump.jpg'\n}, {\n  src: '/images/one-does-not.jpg'\n}, {\n  src: '/images/dank.png'\n}, {\n  src: '/images/boy.png'\n}, {\n  src: '/images/sad.png'\n}, {\n  src: '/images/wolf.png'\n}, {\n  src: '/images/fry.jpg'\n}, {\n  src: '/images/jobs.jpg'\n}, {\n  src: '/images/phone.jpg'\n}, {\n  src: '/images/oldie.png'\n}, {\n  src: '/images/image.png'\n}, {\n  src: '/images/doubt.png'\n}, {\n  src: '/images/crying.png'\n}, {\n  src: '/images/sponge.png'\n}, {\n  src: '/images/dog.png'\n}, {\n  src: '/images/frust.png'\n}, {\n  src: '/images/web.png'\n}, {\n  src: '/images/penguin.png'\n}];\nvar initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n};\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainPage, _React$Component);\n\n  function MainPage() {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this));\n\n    _this.openImage = function (index) {\n      var image = photos[index];\n      var base_image = new Image();\n      base_image.src = image.src;\n\n      var base64 = _this.getBase64Image(base_image);\n\n      _this.setState(function (prevState) {\n        return _objectSpread({\n          currentImage: index,\n          modalIsOpen: !prevState.modalIsOpen,\n          currentImagebase64: base64\n        }, initialState);\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modalIsOpen: !prevState.modalIsOpen\n        };\n      });\n    };\n\n    _this.changeText = function (event) {\n      _this.setState(_defineProperty({}, event.currentTarget.name, event.currentTarget.value));\n    };\n\n    _this.getStateObj = function (e, type) {\n      var rect = _this.imageRef.getBoundingClientRect();\n\n      var xOffset = e.clientX - rect.left;\n      var yOffset = e.clientY - rect.top;\n      var stateObj = {};\n\n      if (type === \"bottom\") {\n        stateObj = {\n          isBottomDragging: true,\n          isTopDragging: false,\n          bottomX: \"\".concat(xOffset, \"px\"),\n          bottomY: \"\".concat(yOffset, \"px\")\n        };\n      } else if (type === \"top\") {\n        stateObj = {\n          isTopDragging: true,\n          isBottomDragging: false,\n          topX: \"\".concat(xOffset, \"px\"),\n          topY: \"\".concat(yOffset, \"px\")\n        };\n      }\n\n      return stateObj;\n    };\n\n    _this.handleMouseDown = function (e, type) {\n      var stateObj = _this.getStateObj(e, type);\n\n      document.addEventListener('mousemove', function (event) {\n        return _this.handleMouseMove(event, type);\n      });\n\n      _this.setState(_objectSpread({}, stateObj));\n    };\n\n    _this.handleMouseMove = function (e, type) {\n      if (_this.state.isTopDragging || _this.state.isBottomDragging) {\n        var stateObj = {};\n\n        if (type === \"bottom\" && _this.state.isBottomDragging) {\n          stateObj = _this.getStateObj(e, type);\n        } else if (type === \"top\" && _this.state.isTopDragging) {\n          stateObj = _this.getStateObj(e, type);\n        }\n\n        _this.setState(_objectSpread({}, stateObj));\n      }\n    };\n\n    _this.handleMouseUp = function (event) {\n      document.removeEventListener('mousemove', _this.handleMouseMove);\n\n      _this.setState({\n        isTopDragging: false,\n        isBottomDragging: false\n      });\n    };\n\n    _this.convertSvgToImage = function () {\n      var svg = _this.svgRef;\n      var svgData = new XMLSerializer().serializeToString(svg);\n      var canvas = document.createElement(\"canvas\");\n      canvas.setAttribute(\"id\", \"canvas\");\n      var svgSize = svg.getBoundingClientRect();\n      canvas.width = svgSize.width;\n      canvas.height = svgSize.height;\n      var img = document.createElement(\"img\");\n      img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData))));\n\n      img.onload = function () {\n        canvas.getContext(\"2d\").drawImage(img, 0, 0);\n        var canvasdata = canvas.toDataURL(\"image/png\");\n        var a = document.createElement(\"a\");\n        a.download = \"meme.png\";\n        a.href = canvasdata;\n        document.body.appendChild(a);\n        a.click();\n      };\n    };\n\n    _this.state = _objectSpread({\n      currentImage: 0,\n      modalIsOpen: false,\n      currentImagebase64: null\n    }, initialState);\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"getBase64Image\",\n    value: function getBase64Image(img) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      var dataURL = canvas.toDataURL(\"image/png\");\n      return dataURL;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var image = photos[this.state.currentImage];\n      var base_image = new Image();\n      base_image.src = image.src;\n      var wrh = base_image.width / base_image.height;\n      var newWidth = 600;\n      var newHeight = newWidth / wrh;\n      var textStyle = {\n        fontFamily: \"Impact\",\n        fontSize: \"50px\",\n        textTransform: \"uppercase\",\n        fill: \"#FFF\",\n        stroke: \"#000\",\n        userSelect: \"none\"\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Make-a-Meme\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"This is a fun 5 hour project inspired by imgur. Built with React.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"You can add top and bottom text to a meme-template, move the text around and can save the image by downloading it.\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, photos.map(function (image, index) {\n        return React.createElement(\"div\", {\n          className: \"image-holder\",\n          key: image.src,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"meme-top-caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"Top text\"), React.createElement(\"img\", {\n          style: {\n            width: \"100%\",\n            cursor: \"pointer\",\n            height: \"100%\"\n          },\n          alt: index,\n          src: image.src,\n          onClick: function onClick() {\n            return _this2.openImage(index);\n          },\n          role: \"presentation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"meme-bottom-caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Bottom text\"));\n      }))), React.createElement(Modal, {\n        className: \"meme-gen-modal\",\n        isOpen: this.state.modalIsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Make-a-Meme\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        width: newWidth,\n        id: \"svg_ref\",\n        height: newHeight,\n        ref: function ref(el) {\n          _this2.svgRef = el;\n        },\n        xmlns: \"http://www.w3.org/2000/svg\",\n        xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"image\", {\n        ref: function ref(el) {\n          _this2.imageRef = el;\n        },\n        xlinkHref: this.state.currentImagebase64,\n        height: newHeight,\n        width: newWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        style: _objectSpread({}, textStyle, {\n          zIndex: this.state.isTopDragging ? 4 : 1\n        }),\n        x: this.state.topX,\n        y: this.state.topY,\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\",\n        onMouseDown: function onMouseDown(event) {\n          return _this2.handleMouseDown(event, 'top');\n        },\n        onMouseUp: function onMouseUp(event) {\n          return _this2.handleMouseUp(event, 'top');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, this.state.toptext), React.createElement(\"text\", {\n        style: textStyle,\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\",\n        x: this.state.bottomX,\n        y: this.state.bottomY,\n        onMouseDown: function onMouseDown(event) {\n          return _this2.handleMouseDown(event, 'bottom');\n        },\n        onMouseUp: function onMouseUp(event) {\n          return _this2.handleMouseUp(event, 'bottom');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, this.state.bottomtext)), React.createElement(\"div\", {\n        className: \"meme-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"toptext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Top Text\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"toptext\",\n        id: \"toptext\",\n        placeholder: \"Add text to the top\",\n        onChange: this.changeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"bottomtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Bottom Text\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"bottomtext\",\n        id: \"bottomtext\",\n        placeholder: \"Add text to the bottom\",\n        onChange: this.changeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.convertSvgToImage();\n        },\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Download Meme!\")))));\n    }\n  }]);\n\n  return MainPage;\n}(React.Component);\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/sachinpatel/Desktop/Sachin_App/ReactMemeMaker/src/Components/MainPage/index.js"],"names":["React","Modal","ModalHeader","ModalBody","FormGroup","Label","NavbarBrand","photos","src","initialState","toptext","bottomtext","isTopDragging","isBottomDragging","topY","topX","bottomX","bottomY","MainPage","openImage","index","image","base_image","Image","base64","getBase64Image","setState","prevState","currentImage","modalIsOpen","currentImagebase64","toggle","changeText","event","currentTarget","name","value","getStateObj","e","type","rect","imageRef","getBoundingClientRect","xOffset","clientX","left","yOffset","clientY","top","stateObj","handleMouseDown","document","addEventListener","handleMouseMove","state","handleMouseUp","removeEventListener","convertSvgToImage","svg","svgRef","svgData","XMLSerializer","serializeToString","canvas","createElement","setAttribute","svgSize","width","height","img","btoa","unescape","encodeURIComponent","onload","getContext","drawImage","canvasdata","toDataURL","a","download","href","body","appendChild","click","ctx","dataURL","wrh","newWidth","newHeight","textStyle","fontFamily","fontSize","textTransform","fill","stroke","userSelect","map","cursor","el","zIndex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, ModalHeader, ModalBody, FormGroup, Label, NavbarBrand } from 'reactstrap';\n\nconst photos = [\n  { src: '/images/vict-baby.png' },\n  { src: '/images/ned.jpeg' },\n  { src: '/images/devilgirl.jpg' },\n  { src: '/images/trump.jpg' },\n  { src: '/images/one-does-not.jpg' },\n  { src: '/images/dank.png' },\n  { src: '/images/boy.png' },\n  { src: '/images/sad.png' },\n  { src: '/images/wolf.png' },\n  { src: '/images/fry.jpg' },\n  { src: '/images/jobs.jpg' },\n  { src: '/images/phone.jpg' },\n  { src: '/images/oldie.png' },\n  { src: '/images/image.png' },\n  { src: '/images/doubt.png' },\n  { src: '/images/crying.png' },\n  { src: '/images/sponge.png' },\n  { src: '/images/dog.png' },\n  { src: '/images/frust.png' },\n  { src: '/images/web.png' },\n  { src: '/images/penguin.png' }\n];\n\nconst initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n}\n\nclass MainPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentImage: 0,\n      modalIsOpen: false,\n      currentImagebase64: null,\n      ...initialState\n    };\n  }\n\n  openImage = (index) => {\n    const image = photos[index];\n    const base_image = new Image();\n    base_image.src = image.src;\n    const base64 = this.getBase64Image(base_image);\n    this.setState(prevState => ({\n      currentImage: index,\n      modalIsOpen: !prevState.modalIsOpen,\n      currentImagebase64: base64,\n      ...initialState\n    }));\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modalIsOpen: !prevState.modalIsOpen\n    }));\n  }\n\n  changeText = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    });\n  }\n\n  getStateObj = (e, type) => {\n    let rect = this.imageRef.getBoundingClientRect();\n    const xOffset = e.clientX - rect.left;\n    const yOffset = e.clientY - rect.top;\n    let stateObj = {};\n    if (type === \"bottom\") {\n      stateObj = {\n        isBottomDragging: true,\n        isTopDragging: false,\n        bottomX: `${xOffset}px`,\n        bottomY: `${yOffset}px`\n      }\n    } else if (type === \"top\") {\n      stateObj = {\n        isTopDragging: true,\n        isBottomDragging: false,\n        topX: `${xOffset}px`,\n        topY: `${yOffset}px`\n      }\n    }\n    return stateObj;\n  }\n\n  handleMouseDown = (e, type) => {\n    const stateObj = this.getStateObj(e, type);\n    document.addEventListener('mousemove', (event) => this.handleMouseMove(event, type));\n    this.setState({\n      ...stateObj\n    })\n  }\n\n  handleMouseMove = (e, type) => {\n    if (this.state.isTopDragging || this.state.isBottomDragging) {\n      let stateObj = {};\n      if (type === \"bottom\" && this.state.isBottomDragging) {\n        stateObj = this.getStateObj(e, type);\n      } else if (type === \"top\" && this.state.isTopDragging){\n        stateObj = this.getStateObj(e, type);\n      }\n      this.setState({\n        ...stateObj\n      });\n    }\n  };\n\n  handleMouseUp = (event) => {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    this.setState({\n      isTopDragging: false,\n      isBottomDragging: false\n    });\n  }\n\n  convertSvgToImage = () => {\n    const svg = this.svgRef;\n    let svgData = new XMLSerializer().serializeToString(svg);\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"id\", \"canvas\");\n    const svgSize = svg.getBoundingClientRect();\n    canvas.width = svgSize.width;\n    canvas.height = svgSize.height;\n    const img = document.createElement(\"img\");\n    img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData))));\n    img.onload = function() {\n      canvas.getContext(\"2d\").drawImage(img, 0, 0);\n      const canvasdata = canvas.toDataURL(\"image/png\");\n      const a = document.createElement(\"a\");\n      a.download = \"meme.png\";\n      a.href = canvasdata;\n      document.body.appendChild(a);\n      a.click();\n    };\n  }\n\n  getBase64Image(img) {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    var dataURL = canvas.toDataURL(\"image/png\");\n    return dataURL;\n  }\n\n  render() {\n    const image = photos[this.state.currentImage];\n    const base_image = new Image();\n    base_image.src = image.src;\n    var wrh = base_image.width / base_image.height;\n    var newWidth = 600;\n    var newHeight = newWidth / wrh;\n    const textStyle = {\n      fontFamily: \"Impact\",\n      fontSize: \"50px\",\n      textTransform: \"uppercase\",\n      fill: \"#FFF\",\n      stroke: \"#000\",\n      userSelect: \"none\"\n    }\n\n    return (\n      <div>\n        <div className=\"main-content\">\n          <div className=\"sidebar\">\n            <NavbarBrand href=\"/\">Make-a-Meme</NavbarBrand>\n            <p>\n              This is a fun 5 hour project inspired by imgur. Built with React.\n            </p>\n            <p>\n              You can add top and bottom text to a meme-template, move the text around and can save the image by downloading it.\n            </p>\n          </div>\n          <div className=\"content\">\n            {photos.map((image, index) => (\n              <div className=\"image-holder\" key={image.src}>\n                <span className=\"meme-top-caption\">Top text</span>\n                <img\n                  style={{\n                    width: \"100%\",\n                    cursor: \"pointer\",\n                    height: \"100%\"\n                  }}\n                  alt={index}\n                  src={image.src}\n                  onClick={() => this.openImage(index)}\n                  role=\"presentation\"\n                />\n              <span className=\"meme-bottom-caption\">Bottom text</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        <Modal className=\"meme-gen-modal\" isOpen={this.state.modalIsOpen}>\n          <ModalHeader toggle={this.toggle}>Make-a-Meme</ModalHeader>\n          <ModalBody>\n            <svg\n              width={newWidth}\n              id=\"svg_ref\"\n              height={newHeight}\n              ref={el => { this.svgRef = el }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n              <image\n                ref={el => { this.imageRef = el }}\n                xlinkHref={this.state.currentImagebase64}\n                height={newHeight}\n                width={newWidth}\n              />\n              <text\n                style={{ ...textStyle, zIndex: this.state.isTopDragging ? 4 : 1 }}\n                x={this.state.topX}\n                y={this.state.topY}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                onMouseDown={event => this.handleMouseDown(event, 'top')}\n                onMouseUp={event => this.handleMouseUp(event, 'top')}\n              >\n                  {this.state.toptext}\n              </text>\n              <text\n                style={textStyle}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                x={this.state.bottomX}\n                y={this.state.bottomY}\n                onMouseDown={event => this.handleMouseDown(event, 'bottom')}\n                onMouseUp={event => this.handleMouseUp(event, 'bottom')}\n              >\n                  {this.state.bottomtext}\n              </text>\n            </svg>\n            <div className=\"meme-form\">\n              <FormGroup>\n                <Label for=\"toptext\">Top Text</Label>\n                <input className=\"form-control\" type=\"text\" name=\"toptext\" id=\"toptext\" placeholder=\"Add text to the top\" onChange={this.changeText} />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"bottomtext\">Bottom Text</Label>\n                <input className=\"form-control\" type=\"text\" name=\"bottomtext\" id=\"bottomtext\" placeholder=\"Add text to the bottom\" onChange={this.changeText} />\n              </FormGroup>\n              <button onClick={() => this.convertSvgToImage()} className=\"btn btn-primary\">Download Meme!</button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}